@using Management.Web.Shared.Components

@inject QuizEditorContext quizContext


@code {

  [Parameter, EditorRequired]
  public LocalQuiz Quiz { get; set; } = default!;
  protected override void OnInitialized()
  {
    quizContext.StateHasChanged += reload;
  }
  private void reload()
  {
    this.InvokeAsync(this.StateHasChanged);
  }
  public void Dispose()
  {
    quizContext.StateHasChanged -= reload;
  }
}


@if(Quiz != null)
{
  <div class="row justify-content-start">
    <div class="col-auto" style="min-width: 35em;"> 
      <div class="row">
        <div class="col-6 text-end">Name: </div>
        <div class="col-6">@Quiz.Name</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">Due At: </div>
        <div class="col-6">@Quiz.DueAt</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">Lock At: </div>
        <div class="col-6">@Quiz.LockAt</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">Shuffle Answers: </div>
        <div class="col-6">@Quiz.ShuffleAnswers</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">Allowed Attempts: </div>
        <div class="col-6">@Quiz.AllowedAttempts</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">One question at a time: </div>
        <div class="col-6">@Quiz.OneQuestionAtATime</div>
      </div>
      <div class="row">
        <div class="col-6 text-end">Assignment Group: </div>
        <div class="col-6">@Quiz.LocalAssignmentGroupName</div>
      </div>
    </div>
  </div>

  <div class="p-3" style="white-space: pre-wrap;">@Quiz.Description</div>

  @foreach(var question in Quiz.Questions)
  {
    
    <div class="bg-dark-subtle mt-1 p-1 ps-2 rounded rounded-2">
      <MarkdownQuestionPreview
        Question="question"
        @key="question"
      />
    </div>
  }
}