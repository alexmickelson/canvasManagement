@using Management.Web.Shared.Components
@using Management.Web.Shared.Components.Quiz

@inject DragContainer dragContainer
@inject QuizEditorContext quizContext
@inject NavigationManager Navigation

@inherits DroppableQuiz

@code {
  private void HandleDragStart()
  {
    dragContainer.DropCallback = dropCallback;
  }

  private void HandleDragEnd()
  {
    dragContainer.DropCallback = null;
  }
  private bool existsInCanvas => 
    planner.CanvasQuizzes != null 
      ? Quiz.QuizIsCreated(planner.CanvasQuizzes) 
      : false;


  private void OnClick() 
  {
    quizContext.Quiz = Quiz;
    Navigation.NavigateTo("/course/" + planner.LocalCourse?.Settings.Name + "/quiz/" + Quiz.Name);
  }
}



<div 
  draggable="true"
  @ondragstart="HandleDragStart"
  @ondragend="HandleDragEnd"
  @onclick="OnClick"
  role="button"
>
  <div class="card">
    <div class="card-body p-0">
      <div class="card-title pt-2 px-2 m-0 d-flex justify-content-between">
        <h4>@Quiz.Name</h4>
          @if(existsInCanvas)
          {
            <CheckIcon />
          }
          else
          {
            <SyncIcon />
          }
      </div>
      @if(!existsInCanvas)
      {
        <div class="mx-3 text-body-tertiary">
          no quiz with same name in canvas
        </div>
      }

      <div class="card-text overflow-hidden p-2">
        <div>Due At: @Quiz.DueAt</div>
      </div>
    </div>

  </div>
</div>