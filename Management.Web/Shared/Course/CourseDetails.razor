
@using CanvasModel.EnrollmentTerms
@using Management.Web.Shared.Module
@using Management.Web.Shared.Semester

@inject CanvasService canvas
@inject CoursePlanner planner

@code
{
  protected override void OnInitialized()
  {
    planner.StateHasChanged += reload;
  }
  protected override async Task OnInitializedAsync()
  {
  }
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if(firstRender)
    {
      if(
        planner.CanvasAssignments == null 
        && planner.LocalCourse != null 
        && planner.LocalCourse.CanvasId != null
      )
      {
        await planner.LoadCanvasData();
      }

    }
  }

  

  private void reload()
  {
    this.InvokeAsync(this.StateHasChanged);
  }
  public void Dispose()
  {
    planner.StateHasChanged -= reload;
  }
}

<div class="row">
  <div class="col overflow-y-auto border rounded " style="max-height: 95vh;">
    @if (planner.LocalCourse != null)
    {
      <div class="py-2">

        @foreach (var month in SemesterPlanner.GetMonthsBetweenDates(planner.LocalCourse.StartDate, planner.LocalCourse.EndDate))
        {
          <MonthDetail Month="month" />
          <hr />
        }
      </div>
    }
  </div>
  <div class="col-4  overflow-y-auto" style="max-height: 95vh;">
    <Modules />
  </div>
</div>