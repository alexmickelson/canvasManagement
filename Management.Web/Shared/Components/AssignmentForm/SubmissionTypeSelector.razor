@using System.Reflection
@inject AssignmentEditorContext assignmentContext

@code 
{
  protected override void OnInitialized()
  {
    assignmentContext.StateHasChanged += reload;
    reload();
  }
  private void reload()
  {
    if (assignmentContext.Assignment != null)
    {
      types = assignmentContext.Assignment.SubmissionTypes;

    }
    this.InvokeAsync(this.StateHasChanged);
  }
  public void Dispose()
  {
    assignmentContext.StateHasChanged -= reload;
  }
  private IEnumerable<string> types { get; set; } = Enumerable.Empty<string>();

  private string getLabel(string type)
  {
    return type.ToString().Replace("_", "") + "switch";
  }

  private bool discussionIsSelected
  {
    get => types.FirstOrDefault(
      t => t == SubmissionType.DISCUSSION_TOPIC
    ) != null;
  }
  private void saveTypes(IEnumerable<string> newTypes)
  {
    if(assignmentContext.Assignment != null)
    {
      types = newTypes;
      assignmentContext.SaveAssignment(assignmentContext.Assignment with
      {
        SubmissionTypes = types
      });
    }
  }

}

<h5>Submission Types</h5>
<div class="row" @key="types">

  @foreach (var submissionType in SubmissionType.AllTypes)
  {
    var isDiscussion = submissionType == SubmissionType.DISCUSSION_TOPIC;
    var allowedToBeChecked = !discussionIsSelected || isDiscussion;

    <div class="col-4">
      <div class="form-check form-switch">
        <input
          class="form-check-input" 
          type="checkbox"
          role="switch" 
          id="@getLabel(submissionType)"
          checked="@(types.Contains(submissionType) && allowedToBeChecked)"
          @onchange="(e) => {
            var isChecked = (bool)(e.Value ?? false);
            if(isChecked)
              saveTypes(types.Append(submissionType));
            else
              saveTypes(types.Where(t => t != submissionType));
          }"
          disabled="@(discussionIsSelected && !isDiscussion)"
        >
        <label 
          class="form-check-label" 
          for="@getLabel(submissionType)"
        >
          @submissionType
        </label>
      </div>
    </div>
  }
</div>