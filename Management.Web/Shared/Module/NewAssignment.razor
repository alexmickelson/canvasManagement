@using Management.Web.Shared.Components

@inject CoursePlanner planner


@code {

  [Parameter]
  [EditorRequired]
  public LocalModule Module { get; set; } = default!;

  [Required]
  [StringLength(50, ErrorMessage = "Name too long (50 character limit).")]
  private string Name { get; set; } = "";

  private Modal? modal { get; set; } = null;

  private void submitHandler()
  {
    System.Console.WriteLine("new assignment");
    var newAssignment = new LocalAssignment
    {
      Id = Guid.NewGuid().ToString(),
      Name = Name,
      Description = "",
      LockAtDueDate = true,
      Rubric = new RubricItem[] { },
      LockAt = null,
      DueAt = DateTime.Now,
      PointsPossible = 10,
      SubmissionTypes = new string[] { SubmissionType.ONLINE_TEXT_ENTRY }
    };

    if(planner.LocalCourse != null)
    {
      var newModules =planner.LocalCourse.Modules.Select(m => 
        m.Name != Module.Name 
          ? m 
          : Module with 
          {
            Assignments=Module.Assignments.Append(newAssignment)
          }
        );
      planner.LocalCourse = planner.LocalCourse with 
      {
        Modules=newModules
      };
    }
    Name = "";
    modal?.Hide();
  }
}
<button 
  class="btn btn-outline-secondary" 
  @onclick="() => modal?.Show()"
>
  + Assignment
</button>

<Modal @ref="modal">
  <Title>New Assignment</Title>
  <Body>
    <form @onsubmit:preventDefault="true" @onsubmit="submitHandler">
      <label for="Assignment Name">Name</label>
      <input id="moduleName" class="form-control" @bind="Name" />
    </form>
  </Body>
  <Footer>
    <button 
      type="button" 
      class="btn btn-primary"
      @onclick="submitHandler"
    >
      Create Assignment
    </button>
  </Footer>
</Modal>