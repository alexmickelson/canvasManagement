@using Management.Web.Shared.Module
@using System.Linq
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject CoursePlanner planner
@inject ProtectedLocalStorage BrowserStorage
@inject BrowserStorageManagement storage

@code {
  private bool showNewModule { get; set; } = false;

  protected override async Task OnAfterRenderAsync(bool firstRender) 
  {
    if(firstRender)
    {
      await storage.LoadStoredConfig();
      StateHasChanged();
    }
  }
  
}

@if (!showNewModule)
{
  <button class="btn btn-secondary" @onclick="() => showNewModule = true">New Module</button>
}
else
{
  <button class="btn btn-secondary" @onclick="() => showNewModule = false">Hide New Module</button>
}

@if (showNewModule)
{
  <NewModule OnSubmit="() => showNewModule = false" />
}

@if (planner.LocalCourse != null)
{
  @foreach (var module in planner.LocalCourse.Modules)
  {
    <hr>
    <ModuleDetail Module="module" />
  }
}

<hr>
<div class="text-center">
  <button 
    class="btn btn-primary" 
    @onclick="@(async () => await storage.Save())"
  >
    Save Modules
  </button>
</div>