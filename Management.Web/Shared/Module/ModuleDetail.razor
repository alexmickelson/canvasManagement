
@using Management.Web.Shared.Components
@using Management.Web.Shared.Module.Assignment
@using LocalModels

@inject CoursePlanner configurationManagement
@inject CoursePlanner planner
@inject AssignmentDragContainer dragContainer

@code {
  [Parameter, EditorRequired]
  public LocalModule Module { get; set; } = default!;
  private bool dragging {get; set;} = false;

  protected override void OnInitialized()
  {
    planner.StateHasChanged += reload;
  }
  private void reload()
  {
    this.InvokeAsync(this.StateHasChanged);
  }
  public void Dispose()
  {
    planner.StateHasChanged -= reload;
  }

  private string accordionId {
    get => Module.Name.Replace(" ", "") + "-AccordionItem";
  }

  void OnDragEnter() {
    dragging = true;
  }
  void OnDragLeave() {
    dragging = false;
  }

  void OnDrop()
  {
    dragging = false;
    if(dragContainer.DropCallback == null){
      System.Console.WriteLine("no drop callback set");
      return;
    }
    dragContainer.DropCallback?.Invoke(null, Module);
  }

  private bool isSyncedWithCanvas => planner
    .CanvasModules?
    .FirstOrDefault(
      cm => cm.Id == Module.CanvasId
    ) != null;
}

<div 
  class="@("accordion-item " + (dragging ? "" : ""))"
  @ondrop="@(() => OnDrop())"
  @ondragenter="OnDragEnter"
  @ondragleave="OnDragLeave"
  ondragover="event.preventDefault();"
>
  <h2 class="accordion-header">
    <button 
      class="accordion-button collapsed" 
      type="button" 
      data-bs-toggle="collapse" 
      data-bs-target="@("#" + accordionId)" 
      aria-controls="@accordionId"
    >
    <div class="w-100 d-flex justify-content-between pe-3">
      <div>
        @Module.Name
      </div>
      @if(isSyncedWithCanvas)
      {
        <CheckIcon />
      }
      else
      {
        <SyncIcon />
      }
    </div>
    </button>
    
  </h2>
  <div 
    id="@accordionId" 
    class="accordion-collapse collapse" 
  >
    @* data-bs-parent="#modulesAccordion" include to limit expanded sections *@
    <div class="accordion-body pt-1">

      <div class="row m-1">
        <div class="col my-auto">
          <h5>Assignments</h5>
        </div>
        <div class="col-auto">
          <NewAssignment 
            Module="Module" 
          />
        </div>
      </div>
      
      <div class="row">
      @foreach (var a in Module.Assignments)
      {
        <AssignmentDetails Assignment="a" Module="Module" />
      }
      </div>
    </div>
  </div>
</div>